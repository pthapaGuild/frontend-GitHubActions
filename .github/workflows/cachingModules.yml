name: Cache Node Modules

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-cypress-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn --prefer-offline

      - name: Archive node_modules
        run: tar -czf node_modules.tar.gz node_modules

      - name: Upload node_modules
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: node_modules.tar.gz

      - id: set-matrix
        run: echo "specs=$(node cypress/support/locateSpecs.js)" >> $GITHUB_OUTPUT
    outputs:
      specs: ${{ steps.set-matrix.outputs.specs }}

  build-matrix:
    needs: [build-cypress-matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 64
      matrix:
        config:
          [
            {
              type: 'desktop',
              config: 'viewportWidth=1920,viewportHeight=1080',
            },
          ]
        browser: [chrome]
        specs: ${{ fromJson(needs.build-cypress-matrix.outputs.specs) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Download node_modules
        uses: actions/download-artifact@v3
        with:
          name: node_modules

      - name: Extract node_modules
        run: tar -xzf node_modules.tar.gz

      - name: Sample Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          install: false
          browser: ${{ matrix.browser }}
          config: ${{ matrix.config.config }}
          specs: ${{ matrix.specs }}
